<!DOCTYPE html> 
<html> 
<head>
	<style type="text/css">
	video, object {
		width: 100%;
		height:100%;
		background-color: #000000;
	}

	html, body, iframe, div {
		margin:0px;
		padding:0px;
		max-height: 100%;
		max-width: 100%;
		color: #ffffff;
		background-color:#000000;
		overflow:hidden;
		overflow-x: hidden;
		overflow-y: hidden;
	}
	.hide {
		transition: opacity 0.5s ease-in-out;
		opacity: 0;
	}
	.show {
		transition: opacity 1s ease-in-out;
		opacity: 1;
	}
</style>
</head>
<body class="ext-webkit ext-chrome"> 
	<script>
		function RegionPlayer(regionName) {
			var currentRegion = regionName;
			var regionDiv = document.getElementById( currentRegion );
			var playlist = document.getElementById( currentRegion + '-playlist' );
			var listItems = playlist.children;
			var currentItem = listItems.length-1;

			function playContent( index ) {
				//console.log('Started playContent for '+currentRegion+' index '+index);
				listItems[index].classList.add( 'current' );
				var jsonItem = JSON.parse(listItems[index].innerHTML);
				switch (jsonItem.type.toLowerCase()) {
					case 'image':
					regionDiv.innerHTML = '<img src="' + jsonItem.source + '" width="100%" height="100%"></img>'
					break;
					case 'video':
					case 'movie':
					regionDiv.innerHTML = '<video id="' + currentRegion + '-video" width="100%" height="100%" autoplay muted  '+ (listItems.length == 1 ? ' loop':'') +'><source src="' + jsonItem.source + '" type="video/mp4"></video>';
					break;
					case 'html':
					regionDiv.innerHTML = '<iframe scrolling="no" src="' + jsonItem.source +'" style="border:none;" width="100%" height="100%"></iframe>'
					break;
					default:
					regionDiv.innerHTML = 'Unrecognised content type: ' + jsonItem.type + ':' + jsonItem.source;
				}
				if (listItems.length > 1) {
					if (jsonItem.duration > 0) {
						window.setTimeout(nextContentEvent, jsonItem.duration * 1000);
					} else {
						if (jsonItem.type === 'video' || jsonItem.type === 'movie') {
							document.getElementById(currentRegion + '-video').addEventListener( 'ended', nextContentEvent);
						} else {
							window.setTimeout(nextContentEvent, 10000);
						}
					}
					currentItem = index;
				}
				regionDiv.classList.remove('hide');
				regionDiv.classList.add('show');
			}

			function nextContentEvent() {
				listItems[currentItem].classList.remove( 'current' );
				nextItem = currentItem + 1;
				if ( nextItem >= listItems.length ) {
					nextItem = 0;
					PlayingPlaylistFromStart();
				}
				if (document.getElementById(currentRegion + '-video')) {
					document.getElementById(currentRegion + '-video').removeEventListener('ended', nextContentEvent);
				}
				regionDiv.classList.remove('show');
				regionDiv.classList.add('hide');
				window.setTimeout(playContent, 500, nextItem);
			} 
			window.setTimeout(nextContentEvent, 1000);

		

		}



	</script>
	<script>
		const ws = new WebSocket('ws://192.168.0.10:3000');
		const triggercontent = "triggercontent:";
		const synchronizecontent = "synchronizecontent:";
		const playplaylistfromstart = "playplaylistfromstart";
		

		function PlayTriggerContent(regionName, mediaItem) {
			var currentRegion = regionName;
			var regionDiv = document.getElementById( currentRegion );
			var playlist = document.getElementById( currentRegion + '-playlist' );
			var listItems = playlist.children;

			switch (mediaItem.AssetType.toLowerCase()) {
					case 'video':
					case 'movie':
					regionDiv.innerHTML = '<video id="' + currentRegion + '-video" width="100%" height="100%" autoplay muted><source src="/incoming/Media/' + mediaItem.Path + '" type="video/mp4"></video>';
					break;
					default:
					regionDiv.innerHTML = 'Unrecognised content type: ' + mediaItem.type + ':' + mediaItem.source;
					}

			document.getElementById(currentRegion + '-video').addEventListener( 'ended', function() {
				console.log(currentRegion);
				RegionPlayer(currentRegion);
			});
		}

		ws.onmessage = function (event) {
			//console.log('event.data: ' + event.data);
			if (event.data === 'reload') {
				location.reload();
			} 
			else if (event.data.startsWith(triggercontent)) {
					var payload = event.data.slice(triggercontent.length);
					//console.log(event.data.slice(triggercontent.length));
					var mediaItem = JSON.parse(payload).MediaItems[0];
					//console.log(mediaItem);
					PlayTriggerContent("Region1", mediaItem);
			}
		};

		function PlayingPlaylistFromStart() {
			ws.send(playplaylistfromstart);
		}


	</script>
	<%- htmlOut %>
</body> 
</html>

